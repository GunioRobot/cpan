MODULE = [% module %]			PACKAGE = [% modu_package %]
PROTOTYPES: ENABLE

################################################################
#### 
#### 
#### $t1           : T1
#### $t2           : T2
#### $modu_package : package namespace
#### $t1_package   : T1 namespace
#### $t2_package   : T2 namespace
#### $t1_is_object : T1 is object or not
#### $t2_is_object : T2 is object or not
#### $root_package : root namespace
####
################################################################

QPair<[% type1 %], [% type2 %]> * 
[% modu_package %]::new(...)
PROTOTYPE: ;$$
PREINIT:
    [% type1 %] [% IF t1_is_object %]*[% ELSE %][% END %]v1;
    [% type2 %] [% IF t2_is_ojbect %]*[% ELSE %][% END %]v2;
CODE:
    /* 
     * QPair<[% t1 %], [% t2 %]>()
     * QPair<[% t1 %], [% t2 %]>(const [% t1 %] & value1, const [% t2 %] & value2)
     */
    switch(items) {
    case 3:
        if(sv_isobject(ST(1)) && sv_derived_from(ST(1), "[% IF t1_package %][% t1_package %]::[% t1 %][% ELSE %][% t1 %]")
            v1 = reinterpret_cast<[% t1 %] *>(SvIV(SvRV(ST(1))));
        elif(SvIOK(ST(1)))
            v1 = reinterpret_cast<[% t1 %] *>(&SvIV(ST(1)));
        elif(SvNOK(ST(1)))
            v1 = reinterpret_cast<[% t1 %] *>(&SvNV(ST(1)));
        elif(SvPOK(ST(1)))
            v1 = reinterpret_cast<[% t1 %] *>(SvPV(ST(1)));
        else
            croak("ST(1) is not of type [% t1 %] or I/N/PV");
        if(sv_isobject(ST(2)) && sv_derived_from(ST(2), "[% IF t2_package %][% t2_package %]::[% t2 %][% ELSE %][% t2 %]")
            v1 = reinterpret_cast<[% t2 %] *>(SvIV(SvRV(ST(2))));
        elif(SvIOK(ST(2)))
            v1 = reinterpret_cast<[% t2 %] *>(&SvIV(ST(2)));
        elif(SvNOK(ST(2)))
            v1 = reinterpret_cast<[% t2 %] *>(&SvNV(ST(2)));
        elif(SvPOK(ST(2)))
            v1 = reinterpret_cast<[% t2 %] *>(SvPV(ST(2)));
        else
            croak("ST(2) is not of type [% t2 %] or I/N/PV");
        RETVAL = new QPair<[% t1 %], [% t2 %]>(v1, v2);
        break;
    default:
        RETVAL = new QPair<[% t1 %], [% t2 %]>();
OUTPUT:
    RETVAL

